name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.cfg.python-version }}, OpenMM ${{ matrix.cfg.openmm }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        cfg:
          - { os: macOS-latest,   python-version: '3.8', openmm: latest  }
          - { os: windows-latest, python-version: '3.8.10', openmm: latest  }
          - { os: ubuntu-latest,  python-version: '3.8', openmm: latest  }
          - { os: ubuntu-latest,  python-version: '3.9', openmm: latest  }
          - { os: ubuntu-latest,  python-version: '3.8', openmm: nightly }
          - { os: ubuntu-latest,  python-version: '3.10', openmm: latest  }
          - { os: ubuntu-latest,  python-version: '3.10', openmm: rc }

    env:
      OPENMM: ${{ matrix.cfg.openmm }}

    steps:
      - uses: actions/checkout@v3

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a

      - uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          # Not sure which packages pull from omnia/defaults these days
          channel-priority: "flexible"
          extra-specs: |
            python=${{ matrix.cfg.python-version }}

      - name: Install OpenMM nightly
        shell: bash -l {0}
        if: matrix.cfg.openmm == 'nightly'
        run: |
          micromamba install --no-channel-priority --yes -c omnia-dev openmm

      - name: Install OpenMM RC
        shell: bash -l {0}
        if: matrix.cfg.openmm == 'rc'
        run: |
          micromamba install --no-channel-priority --yes -c conda-forge/label/openmm_rc openmm

      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          conda list

      - name: Run tests
        shell: bash -l {0}
        run: |
          # pytest -v --cov=openmmtools --cov-report=xml --color=yes openmmtools/tests/
          nosetests openmmtools/tests --nocapture --verbosity=2 --with-timer --with-doctest -a '!slow'

      - name: CodeCov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.cfg.os }}-py${{ matrix.cfg.python-version }}
